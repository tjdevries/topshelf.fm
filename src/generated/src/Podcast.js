// Generated by Melange

import * as Rss from "@/components/rss";
import * as Spotify from "@/components/spotify";
import * as Button from "@/components/ui/button";
import * as Youtube from "@/components/youtube";
import * as Curry from "melange.js/curry.js";
import * as Melange__Episodes from "./episodes.js";
import * as Stdlib__Array from "melange/array.js";
import * as React from "react";
import * as JsxRuntime from "react/jsx-runtime";

function dangerousHtml(html) {
  return {
          __html: html
        };
}

function reducer(state, param) {
  return {
          expanded: !state.expanded,
          other: state.other
        };
}

function Podcast$EpisodeComp(Props) {
  let episode = Props.episode;
  const match = React.useReducer(reducer, {
        expanded: false,
        other: ""
      });
  const dispatch = match[1];
  const description_class = match[0].expanded ? "" : "hidden";
  const body = JsxRuntime.jsx("div", {
        className: "peer border border-white p-4 m-4 text-wrap cursor-text " + description_class,
        onClick: (function (e) {
            e.stopPropagation();
          }),
        dangerouslySetInnerHTML: {
          __html: episode.description
        }
      });
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h4", {
                              children: episode.title,
                              className: "text-lg font-semibold"
                            }),
                        JsxRuntime.jsx("span", {
                              children: episode.duration,
                              className: "text-sm hidden lg:block "
                            })
                      ],
                      className: "flex justify-between items-center"
                    }),
                body,
                JsxRuntime.jsx("a", {
                      children: JsxRuntime.jsx(Button.Button, {
                            children: "Goto Episode",
                            variant: "outline",
                            className: "mt-2 text-xs"
                          }),
                      href: episode.link,
                      onClick: (function (e) {
                          e.stopPropagation();
                        })
                    })
              ],
              className: "border border-primary p-4 rounded-md hover:border-primary-400 hover:bg-primary-400 hover:text-black transition-colors cursor-pointer",
              onClick: (function (param) {
                  Curry._1(dispatch, /* ToggleExpanded */0);
                })
            });
}

const EpisodeComp = {
  reducer: reducer,
  make: Podcast$EpisodeComp
};

const rss_url = "https://anchor.fm/s/fb29b160/podcast/rss";

const spotify_url = "https://podcasters.spotify.com/pod/show/topshelffm";

const youtube_url = "https://www.youtube.com/@TopShelfFM";

function Podcast(Props) {
  const episodes = Stdlib__Array.map((function (episode) {
          const Key = episode.id;
          return JsxRuntime.jsx(Podcast$EpisodeComp, {
                      episode: episode
                    }, Key);
        }), Melange__Episodes.channel.items);
  return JsxRuntime.jsx("div", {
              children: JsxRuntime.jsxs("div", {
                    children: [
                      JsxRuntime.jsxs("header", {
                            children: [
                              JsxRuntime.jsx("div", {
                                    children: JsxRuntime.jsx("div", {
                                          children: JsxRuntime.jsx("h1", {
                                                children: "Top Shelf",
                                                className: "text-2xl font-bold"
                                              }),
                                          className: "flex items-center space-x-2"
                                        }),
                                    className: "container mx-auto flex justify-between items-center"
                                  }),
                              JsxRuntime.jsx("div", {
                                    children: JsxRuntime.jsx("br", {}),
                                    className: "container mx-auto flex justify-between items-center"
                                  }),
                              JsxRuntime.jsx("p", {
                                    children: "You know ThePrimeagen can't read, but now you can finally watch him listen. Don't worry, teej_dv is here to help with coherent questions.",
                                    className: "container mx-auto flex justify-between items-center items"
                                  })
                            ],
                            className: "p-6"
                          }),
                      JsxRuntime.jsxs("section", {
                            children: [
                              JsxRuntime.jsxs("div", {
                                    children: [
                                      JsxRuntime.jsx("h3", {
                                            children: "Latest Episodes",
                                            className: "max-content text-2xl text-primary-400 font-bold my-auto"
                                          }),
                                      JsxRuntime.jsxs("section", {
                                            children: [
                                              JsxRuntime.jsx(Spotify.SpotifyLink, {
                                                    url: spotify_url
                                                  }),
                                              JsxRuntime.jsx(Youtube.YoutubeLink, {
                                                    url: youtube_url
                                                  }),
                                              JsxRuntime.jsx(Rss.RssLink, {
                                                    url: rss_url
                                                  })
                                            ],
                                            className: "flex gap-2"
                                          })
                                    ],
                                    className: "flex w-full justify-between mb-2 items-center content-center"
                                  }),
                              JsxRuntime.jsx("div", {
                                    children: episodes,
                                    className: "space-y-4"
                                  })
                            ],
                            className: "container mx-auto flex flex-col"
                          })
                    ],
                    className: "min-h-screen bg-black text-primary-400 font-mono"
                  }),
              className: "mx-auto max-w-4xl"
            });
}

const channel = Melange__Episodes.channel;

const make = Podcast;

const $$default = Podcast;

export {
  channel ,
  dangerousHtml ,
  EpisodeComp ,
  rss_url ,
  spotify_url ,
  youtube_url ,
  make ,
  $$default as default,
}
/* @/components/rss Not a pure module */
